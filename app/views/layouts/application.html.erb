<!DOCTYPE html>
<html>
  <head>
    <title>TypingApp</title>
    <%= csrf_meta_tags %>
    <%= stylesheet_link_tag    'application', media: 'all' %>
    <%= javascript_include_tag 'application' %>
  </head>
  <body>
    <div class="container-fluid">

      <%= yield %>

      <div id="type-console">
        <%= render 'partials/main' %>

        <div v-show="stats">

          <div class="alert alert-info" role="alert">
            {{ statsMsg }} <br> {{ userSpeedMsq }} <br> {{ computerSpeedMsg }} <br>

          </div>
            Press <strong>any Key</strong> to continue

        </div>

        <div v-show="finishExercise">
          <div class="alert alert-success" role="alert">
            <strong>Awesome!</strong> You are finished with this section.
            <br>
          </div>
        </div>
      </div>

    </div>
  </body>
  <script>


var typeConsole = new Vue({
  el: '#type-console',
  data: {
    bookId: <%= @book_id %>,
    pageIds: <%= @book_page_ids %>,
    content: "",
    stats: false,
    statsMsg: "",
    userSpeedMsq: "",
    computerSpeedMsg: "",
    finishExercise: ""
  },
  created: function(){
    this.fetchPageContent();
  },
  methods: {
    fetchPageContent: function() {
      if (this.pageIds.length > 0) {
        this.$http.get(`/books/${this.bookId}/book_pages/${this.pageIds.shift()}.json`).then((response) => {
          this.typingConsole(response.data.page_content)
        }, (response) => {
          alert("We had trouble loading content. Please reload the page.")
        });
      } else {
        this.finishExercise = true;
      }
    },
    typingConsole: function(text) {
      vm = this;
      var charPointer           = 0;
      var errors                = 0;
      var charIndex             = 0;
      var textLength            = text.length;
      var textInSpanWithIds     = "";
      var chars                 = text.split("");
      var defaultWordPerMinute  = 50;
      var computerWordPerMinute = localStorage.userWPM || defaultWordPerMinute;
      var toCharacter           = 5;
      var pageUrl               = window.location.href;
      var currentCharacter;

      var computerTimeout = function(wordPerMinute) {
        let secondsInMinute      = 60;
        let millisecundsInSecond = 1000;
        return secondsInMinute * millisecundsInSecond / wordPerMinute;
      }

      var computerDelayTime = computerTimeout(computerWordPerMinute * toCharacter);

      // this is parsing text and giving it spans
      for(let i=0; i<textLength; i++) {
        if (text[i] == "\n") {
          textInSpanWithIds += text[i]
        }else if (((text[i] === " ") && (text[i-1] === " ")) || ((text[i] === " ") && (text[i-1] == "\n"))) {
          textInSpanWithIds += text[i]
        } else {
          textInSpanWithIds += `<span id="char-${charIndex}">${text[i]}</span>`;
          charIndex++;
        }
      }

      var lastSpanIndex = charIndex;

      document.getElementById("text").innerHTML = textInSpanWithIds;
      document.getElementById("char-0").className += "cursor";

      var computerBackgroundHighlighter = function(currentIndex) {
        if(currentIndex < lastSpanIndex) {
          document.getElementById(`char-${currentIndex}`).className += ' computer';
          currentIndex++;

          window.setTimeout(function(){
            computerBackgroundHighlighter(currentIndex);
          }, computerDelayTime);
        }
      }

      var Timer = {};

      var checkOnKeypress = function(event) {
        // execute computerBackgroundHighlighter only when first key is pressed
        if (charPointer === 0) {
          Timer.startTimer = new Date().getTime();

          if (compete) {
            computerBackgroundHighlighter(0);
          }
        }

        if (charPointer < lastSpanIndex) {
          var userKeyCode  = event.which;
          var userChar     = String.fromCharCode(userKeyCode);
          currentCharacter = document.getElementById(`char-${charPointer}`).innerHTML;

          // handles event when user presses space
          if(event.type === 'keydown') {
            if(!((userChar === ' ') && (currentCharacter === ' '))) {
              return;
            }
          }

          // removes currsor highlighter
          currentClasses = document.getElementById(`char-${charPointer}`).className;
          document.getElementById(`char-${charPointer}`).className = currentClasses.replace("cursor", "");

          // highlights correct/wrong user input
          if (userChar === currentCharacter) {
            document.getElementById(`char-${charPointer}`).className += " right-char";

          } else {
            let currentSpanCharacter = document.getElementById(`char-${charPointer}`);
            currentSpanCharacter.className += " wrong-char";

            if (currentSpanCharacter.innerHTML === " ") {
              currentSpanCharacter.innerHTML = "_";
            }
            errors++
          }
        }

        // calculate times and display stats
        if ((charPointer+1) === lastSpanIndex) {
          Timer.endTimer         = new Date().getTime();
          let timeToFinishTyping = (Timer.endTimer - Timer.startTimer) / 1000;
          let numOfChar          = lastSpanIndex;
          let minute             = 60;
          let charsPerMinute     = (numOfChar * 60) / timeToFinishTyping;
          let wordsPerMinute     = Math.round(charsPerMinute / toCharacter);

          localStorage.setItem("userWPM", wordsPerMinute);

          // display stats
          vm.stats            = true;
          vm.statsMsg         = `You typed ${(lastSpanIndex)-errors} characters correctly and typed ${errors} characters incorectly!`;
          vm.userSpeedMsq     = `Your speed: ${wordsPerMinute} words per minute!`;
          vm.computerSpeedMsg = `Computer speed: ${computerWordPerMinute} `;
        } else if ((charPointer) == lastSpanIndex) {
          typeConsole.fetchPageContent();
          vm.stats = "";
        } else if ((charPointer+1) > lastSpanIndex) {
          return;
        }
        charPointer += 1;

        // adds currsor highlighter to next character
        if (charPointer < lastSpanIndex) {
          document.getElementById(`char-${charPointer}`).className += " cursor"
        }
      }

      document.body.addEventListener('keypress', checkOnKeypress);
      document.body.addEventListener('keydown', checkOnKeypress);
    }
  }
})


  </script>
</html>
